" vim: set sw=4 ts=4 sts=4 et tw=78 foldmarker={,} foldlevel=0 foldmethod=marker spell:
" My local configs for spf13-vim
" https://github.com/spf13/spf13-vim

" Disable highlighting by pressing esc "
nnoremap <Leader><cr> :noh<return><esc>

" Quick-save buffer"
noremap <Leader>w :update<CR>

 let g:gofmt_command = "gofmt -tabs=false -tabwidth=4"

" Solarized Airline theme "
let g:airline_theme="solarized"

" Yank to clipboard "
set clipboard=unnamedplus

" gotags settings for TagBar {
let g:tagbar_type_go = {
    \ 'ctagstype' : 'go',
    \ 'kinds'     : [
        \ 'p:package',
        \ 'i:imports:1',
        \ 'c:constants',
        \ 'v:variables',
        \ 't:types',
        \ 'n:interfaces',
        \ 'w:fields',
        \ 'e:embedded',
        \ 'm:methods',
        \ 'r:constructor',
        \ 'f:functions'
    \ ],
    \ 'sro' : '.',
    \ 'kind2scope' : {
        \ 't' : 'ctype',
        \ 'n' : 'ntype'
    \ },
    \ 'scope2kind' : {
        \ 'ctype' : 't',
        \ 'ntype' : 'n'
    \ },
    \ 'ctagsbin'  : 'gotags',
    \ 'ctagsargs' : '-sort -silent'
\ }
" }

set runtimepath-=~/.vim/bundle/syntastic
"let g:pymode_lint = 0
"" Use pylint checker for syntastic "
"let g:syntastic_python_checkers=['pylama']
"let g:syntastic_python_pylama_args="--options=/home/eda/.pylama.ini"
"
"set statusline+=%#warningmsg#
"set statusline+=%{SyntasticStatuslineFlag()}
"set statusline+=%*
"
"let g:syntastic_always_populate_loc_list = 1
"let g:syntastic_auto_loc_list = 1
"let g:syntastic_check_on_open = 1
"let g:syntastic_check_on_wq = 0
"let g:syntastic_cpp_compiler_options = ' -std=c++1y'

set mouse=

"let g:spf13_bundle_groups=['general', 'writing', 'youcompleteme', 'programming', 'php', 'ruby', 'python', 'javascript', 'html', 'misc',]
"iunmap <Esc>
" Fix for not being able to write å
let g:AutoPairsShortcutFastWrap='<Nop>'

" https://github.com/spf13/spf13-vim/issues/819
"inoremap <expr><CR> neosnippet#expandable() ? neosnippet#mappings#expand_or_jump_impl() : pumvisible() ? neocomplete#close_popup() : "\<CR>"

let g:ctrlp_funky_syntax_highlight = 1
let g:ctrlp_cmd = 'CtrlPBuffer'

map å <C-]>
map <leader>ö :bNext<cr>
map <leader>ä :bprev<cr>

" Neomake
autocmd! BufWritePost * Neomake
" Runmake when saving a tex file
autocmd! BufWritePost *.tex Neomake!
let g:neomake_cpp_enable_makers = ['gpp']
let g:neomake_cpp_gpp_maker = {
\ 'exe' : 'g++',
\ 'args': ['-std=c++1y'],
\ }

set runtimepath-=~/.vim/bundle/neocomplete.vim
let g:deoplete#enable_at_startup = 1
