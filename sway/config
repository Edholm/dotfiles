# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty
# Your preferred application launcher
# Note: it's recommended that you pass the final command to sway
set $menu wofi -s ~/.config/wofi/config

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg ~/supplementary/pics/linus.png fit
default_border pixel 1
default_floating_border pixel 1
hide_edge_borders smart_no_gaps

# You can get the names of your outputs by running: swaymsg -t get_outputs
set $laptop eDP-1
set $acer DP-3
output $acer scale 1
output $laptop scale 2
bindswitch --reload lid:on output $laptop disable
bindswitch --reload lid:off output $laptop enable

# class                 border  background text    indicator child_border
client.focused          #96a900 #859900    #fdf6e3 #dc322f   #96a900
client.focused_inactive #073642 #269be2    #eee8d5 #dc322f   #073642
client.unfocused        #073642 #269be2    #93a1a1 #dc322f   #073642
client.urgent           #cb4b16 #dc322f    #fdf6e3 #dc322f   #cb4b16

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' \
#               resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
exec swayidle -w \
         timeout 300 'swaylock' \
         timeout 305 'swaymsg "output * dpms off"' \
              resume 'swaymsg "output * dpms on"' \
        before-sleep 'swaylock'

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
input * {
    xkb_layout se
    xkb_variant nodeadkeys
    repeat_delay 200
    repeat_rate 30

# Libinput
    tap enabled
    dwt enabled
    pointer_accel -0.2
    accel_profile flat

}

input 1133:16495:Logitech_MX_Ergo {
    accel_profile adaptive
    pointer_accel -0.5
}

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+r exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

    bindsym $mod+less move workspace to output left
    bindsym $mod+greater move workspace to output left
#
# Workspaces:
#

    set $ws1 "1:"
    set $ws2 "2:"
    set $ws3 "3:"
    set $ws4 "4:"
    set $ws5 "5:"
    set $ws6 "6:"
    set $ws7 "7:"
    set $ws8 "8:"
    set $ws9 "9:"
    set $ws10 "10:"
    # switch to workspace
    bindsym $mod+1 workspace $ws1
    bindsym $mod+2 workspace $ws2
    bindsym $mod+3 workspace $ws3
    bindsym $mod+4 workspace $ws4
    bindsym $mod+5 workspace $ws5
    bindsym $mod+6 workspace $ws6
    bindsym $mod+7 workspace $ws7
    bindsym $mod+8 workspace $ws8
    bindsym $mod+9 workspace $ws9
    bindsym $mod+0 workspace $ws10
    
    # move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace $ws1
    bindsym $mod+Shift+2 move container to workspace $ws2
    bindsym $mod+Shift+3 move container to workspace $ws3
    bindsym $mod+Shift+4 move container to workspace $ws4
    bindsym $mod+Shift+5 move container to workspace $ws5
    bindsym $mod+Shift+6 move container to workspace $ws6
    bindsym $mod+Shift+7 move container to workspace $ws7
    bindsym $mod+Shift+8 move container to workspace $ws8
    bindsym $mod+Shift+9 move container to workspace $ws9
    bindsym $mod+Shift+0 move container to workspace $ws10


#
# Workspace assignments
#
    assign [class="(?i)google-chrome"] → $ws1
    assign [class="(?i)chromium"] → $ws1
    assign [class="(?i)firefox"] → $ws1
    assign [class="^Spotify$"] → $ws7
    assign [class="(?i)Pidgin"] → $ws10
    assign [class="(?i)Skype"] → $ws9
    assign [class="(?i)slack"] → $ws10
    assign [class="(?i)jetbrains-idea"] → $ws2
    assign [class="(?i)jetbrains-datagrip"] → $ws7
    for_window [class="java-lang-Thread"] floating enable
    assign [class="java-lang-Thread"] → $ws2

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    #bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+s move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+s scratchpad show

    for_window [app_id="scratchpad"] border pixel 1; move scratchpad
    exec --no-startup-id alacritty --class scratchpad --title scratchpad
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Shift+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    position top

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command /usr/bin/bumblebee-status -m nic battery pasink date time -p time.format="%H:%M" -t solarized-powerline -p nic.exclude="br-d0f33c15f051,br-fa7dc25ef2ef,lo,docker0"

    colors {
        separator #002b36
        statusline #fdf6e3
        background #002b36
        focused_workspace #859900 #859900 #002b36
        active_workspace #268bd2 #268bd2 #002b36
        urgent_workspace #cb4b16 #cb4b16 #002b36
        inactive_workspace #002b36 #002b36 #fdf6e3
        binding_mode #859900 #859900 #002b36
    }
}

include /etc/sway/config.d/*


#
# Application specific config
#
    for_window [class="(?i)google-chrome"] border none
    for_window [class="(?i)chromium"] border none
    for_window [class="(?i)dwb"] border none
    for_window [class="(?i)mpv"] floating enable

    # Float Firefox preferences window.
    for_window [instance="^Toplevel"] floating enable
    
    # Make intellij not lose focus on popup dialogs
    for_window [class="^jetbrains-.+" window_type=dialog] focus
    for_window [class="^jetbrains-.+" title="win0"] floating enable
    for_window [class="^jetbrains-.+" title=".+IDEA"] floating disable
    for_window [class="^jetbrains-.+" title=".+DataGrip"] floating disable

#
# Start apps
#

bindsym Shift+Print exec grim -o $(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name') ~/screenshots/$(date +'%Y-%m-%d-%H%M%S_grim.png')
bindsym Alt+Print exec swaymsg -t get_tree | jq '.. | (.nodes? // empty)[] | select(.focused and .pid) | .rect | "\(.x),\(.y) \(.width)x\(.height)"' | sed 's|"||g' | grim -g - ~/screenshots/$(date +'%Y-%m-%d-%H%M%S_grim.png')
bindsym Print exec ~/.bin/snipping-tool
exec ~/.bin/inactive-windows-transparency.py
exec mako


